#!/bin/zsh

GOFMT=`which gofmt`

if [[ ! -x "$GOFMT" ]]; then
  printf "\t\033[41mPlease install gofmt.\033[0m"
  exit 1
fi

find . \( -name "*.go" ! -name "*.pb.go" \) -exec $GOFMT -w {} \;

REVIVE=`which revive`

if [[ ! -x "$REVIVE" ]]; then
  printf "\t\033[41mPlease install revive (https://github.com/mgechev/revive).\033[0m"
  exit 1
fi


FOLDERS=`find . -type f -name "*.go" -exec dirname "{}" \; | awk -F "/" '{print $2}' | awk 'NF' | sort -u`

PASS=true

for FOLDER in $(echo $FOLDERS)
do
  ENV="GOOS= GOARCH="
  # Formatting Go code.
  CMD="$ENV $GOFMT -s -w $FOLDER"
  echo $CMD
  zsh -c "$CMD"
  if [[ $? == 0 ]]; then
    printf "\033[32m$GOFMT $FOLDER\033[0m \033[0;30m\033[42mPASS\033[0m\n"
  else
    printf "\033[31m$GOFMT $FOLDER\033[0m \033[0;30m\033[41mFAILURE!\033[0m\n"
    PASS=false
  fi

  # Running the linter.
  if [[ $FOLDER == 'wasm' ]]; then
	  ENV="GOOS=js GOARCH=wasm"
  else
  	  EMV="GOOS= GOARCH="
  fi
  CMD="$ENV $REVIVE --config .revive.toml $FOLDER/..."
  echo $CMD
  zsh -c "$CMD"
  if [[ $? == 0 ]]; then
    printf "\033[32m$REVIVE $FOLDER\033[0m \033[0;30m\033[42mPASS\033[0m\n"
  else
    printf "\033[31m$REVIVE $FOLDER\033[0m \033[0;30m\033[41mFAILURE!\033[0m\n"
    PASS=false
  fi

  # Running the tests.
  CMD="$ENV go test -vet=all ./$FOLDER/..."
  echo $CMD
  zsh -c "$CMD"
  if [[ $? == 0 ]]; then
    printf "\033[32mTests $FOLDER\033[0m \033[0;30m\033[42mPASS\033[0m\n"
  else
    printf "\033[31mTests $FOLDER\033[0m \033[0;30m\033[41mFAILURE!\033[0m\n"
    PASS=false
  fi
done

if ! $PASS; then
  printf "\033[0;30m\033[41mPRE-COMMIT HOOK FAILED\033[0m\n"
  exit 1
else
  printf "\033[0;30m\033[42mPRE-COMMIT HOOK SUCCEEDED\033[0m\n"
fi

exit 0
