# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import root_pb2 as root__pb2


class RootStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/multiscope.root.Root/GetVersion',
                request_serializer=root__pb2.GetVersionRequest.SerializeToString,
                response_deserializer=root__pb2.GetVersionResponse.FromString,
                )
        self.GetRootInfo = channel.unary_unary(
                '/multiscope.root.Root/GetRootInfo',
                request_serializer=root__pb2.GetRootInfoRequest.SerializeToString,
                response_deserializer=root__pb2.GetRootInfoResponse.FromString,
                )
        self.SetKeySettings = channel.unary_unary(
                '/multiscope.root.Root/SetKeySettings',
                request_serializer=root__pb2.SetKeySettingsRequest.SerializeToString,
                response_deserializer=root__pb2.SetKeySettingsResponse.FromString,
                )
        self.SetLayout = channel.unary_unary(
                '/multiscope.root.Root/SetLayout',
                request_serializer=root__pb2.SetLayoutRequest.SerializeToString,
                response_deserializer=root__pb2.SetLayoutResponse.FromString,
                )


class RootServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVersion(self, request, context):
        """Get the version of the proto API.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRootInfo(self, request, context):
        """Return info at the root node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetKeySettings(self, request, context):
        """Set the key for the UI settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLayout(self, request, context):
        """Set the layout of the UI.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RootServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=root__pb2.GetVersionRequest.FromString,
                    response_serializer=root__pb2.GetVersionResponse.SerializeToString,
            ),
            'GetRootInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRootInfo,
                    request_deserializer=root__pb2.GetRootInfoRequest.FromString,
                    response_serializer=root__pb2.GetRootInfoResponse.SerializeToString,
            ),
            'SetKeySettings': grpc.unary_unary_rpc_method_handler(
                    servicer.SetKeySettings,
                    request_deserializer=root__pb2.SetKeySettingsRequest.FromString,
                    response_serializer=root__pb2.SetKeySettingsResponse.SerializeToString,
            ),
            'SetLayout': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLayout,
                    request_deserializer=root__pb2.SetLayoutRequest.FromString,
                    response_serializer=root__pb2.SetLayoutResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'multiscope.root.Root', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Root(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.root.Root/GetVersion',
            root__pb2.GetVersionRequest.SerializeToString,
            root__pb2.GetVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRootInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.root.Root/GetRootInfo',
            root__pb2.GetRootInfoRequest.SerializeToString,
            root__pb2.GetRootInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetKeySettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.root.Root/SetKeySettings',
            root__pb2.SetKeySettingsRequest.SerializeToString,
            root__pb2.SetKeySettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLayout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.root.Root/SetLayout',
            root__pb2.SetLayoutRequest.SerializeToString,
            root__pb2.SetLayoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
