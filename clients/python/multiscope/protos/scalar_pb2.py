# Copyright 2023 DeepMind Technologies Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: multiscope/protos/scalar.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from multiscope.protos import tree_pb2 as multiscope_dot_protos_dot_tree__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1emultiscope/protos/scalar.proto\x12\x11multiscope.scalar\x1a\x1cmultiscope/protos/tree.proto\"Q\n\x06Writer\x12#\n\x07tree_id\x18\x01 \x01(\x0b\x32\x12.multiscope.TreeID\x12\"\n\x04path\x18\x02 \x01(\x0b\x32\x14.multiscope.NodePath\"[\n\x10NewWriterRequest\x12#\n\x07tree_id\x18\x01 \x01(\x0b\x32\x12.multiscope.TreeID\x12\"\n\x04path\x18\x02 \x01(\x0b\x32\x14.multiscope.NodePath\">\n\x11NewWriterResponse\x12)\n\x06writer\x18\x01 \x01(\x0b\x32\x19.multiscope.scalar.Writer\"\xb9\x01\n\x0cWriteRequest\x12)\n\x06writer\x18\x01 \x01(\x0b\x32\x19.multiscope.scalar.Writer\x12I\n\x0elabel_to_value\x18\x02 \x03(\x0b\x32\x31.multiscope.scalar.WriteRequest.LabelToValueEntry\x1a\x33\n\x11LabelToValueEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"\x0f\n\rWriteResponse2\xb1\x01\n\x07Scalars\x12X\n\tNewWriter\x12#.multiscope.scalar.NewWriterRequest\x1a$.multiscope.scalar.NewWriterResponse\"\x00\x12L\n\x05Write\x12\x1f.multiscope.scalar.WriteRequest\x1a .multiscope.scalar.WriteResponse\"\x00\x42#Z!multiscope/protos/scalar_go_protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'multiscope.protos.scalar_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z!multiscope/protos/scalar_go_proto'
  _WRITEREQUEST_LABELTOVALUEENTRY._options = None
  _WRITEREQUEST_LABELTOVALUEENTRY._serialized_options = b'8\001'
  _globals['_WRITER']._serialized_start=83
  _globals['_WRITER']._serialized_end=164
  _globals['_NEWWRITERREQUEST']._serialized_start=166
  _globals['_NEWWRITERREQUEST']._serialized_end=257
  _globals['_NEWWRITERRESPONSE']._serialized_start=259
  _globals['_NEWWRITERRESPONSE']._serialized_end=321
  _globals['_WRITEREQUEST']._serialized_start=324
  _globals['_WRITEREQUEST']._serialized_end=509
  _globals['_WRITEREQUEST_LABELTOVALUEENTRY']._serialized_start=458
  _globals['_WRITEREQUEST_LABELTOVALUEENTRY']._serialized_end=509
  _globals['_WRITERESPONSE']._serialized_start=511
  _globals['_WRITERESPONSE']._serialized_end=526
  _globals['_SCALARS']._serialized_start=529
  _globals['_SCALARS']._serialized_end=706
# @@protoc_insertion_point(module_scope)
