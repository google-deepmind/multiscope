# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import base_pb2 as base__pb2


class BaseWritersStub(object):
    """*********
    SERVICE
    *********

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NewGroup = channel.unary_unary(
                '/multiscope.base.BaseWriters/NewGroup',
                request_serializer=base__pb2.NewGroupRequest.SerializeToString,
                response_deserializer=base__pb2.NewGroupResponse.FromString,
                )
        self.NewProtoWriter = channel.unary_unary(
                '/multiscope.base.BaseWriters/NewProtoWriter',
                request_serializer=base__pb2.NewProtoWriterRequest.SerializeToString,
                response_deserializer=base__pb2.NewProtoWriterResponse.FromString,
                )
        self.WriteProto = channel.unary_unary(
                '/multiscope.base.BaseWriters/WriteProto',
                request_serializer=base__pb2.WriteProtoRequest.SerializeToString,
                response_deserializer=base__pb2.WriteProtoResponse.FromString,
                )
        self.NewRawWriter = channel.unary_unary(
                '/multiscope.base.BaseWriters/NewRawWriter',
                request_serializer=base__pb2.NewRawWriterRequest.SerializeToString,
                response_deserializer=base__pb2.NewRawWriterResponse.FromString,
                )
        self.WriteRaw = channel.unary_unary(
                '/multiscope.base.BaseWriters/WriteRaw',
                request_serializer=base__pb2.WriteRawRequest.SerializeToString,
                response_deserializer=base__pb2.WriteRawResponse.FromString,
                )


class BaseWritersServicer(object):
    """*********
    SERVICE
    *********

    """

    def NewGroup(self, request, context):
        """Create a new group in Multiscope.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewProtoWriter(self, request, context):
        """Create a new proto writer node in Multiscope.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteProto(self, request, context):
        """Write proto data to Multiscope.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewRawWriter(self, request, context):
        """Create a new raw writer node in Multiscope.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteRaw(self, request, context):
        """Write raw data to Multiscope.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BaseWritersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NewGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.NewGroup,
                    request_deserializer=base__pb2.NewGroupRequest.FromString,
                    response_serializer=base__pb2.NewGroupResponse.SerializeToString,
            ),
            'NewProtoWriter': grpc.unary_unary_rpc_method_handler(
                    servicer.NewProtoWriter,
                    request_deserializer=base__pb2.NewProtoWriterRequest.FromString,
                    response_serializer=base__pb2.NewProtoWriterResponse.SerializeToString,
            ),
            'WriteProto': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteProto,
                    request_deserializer=base__pb2.WriteProtoRequest.FromString,
                    response_serializer=base__pb2.WriteProtoResponse.SerializeToString,
            ),
            'NewRawWriter': grpc.unary_unary_rpc_method_handler(
                    servicer.NewRawWriter,
                    request_deserializer=base__pb2.NewRawWriterRequest.FromString,
                    response_serializer=base__pb2.NewRawWriterResponse.SerializeToString,
            ),
            'WriteRaw': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteRaw,
                    request_deserializer=base__pb2.WriteRawRequest.FromString,
                    response_serializer=base__pb2.WriteRawResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'multiscope.base.BaseWriters', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BaseWriters(object):
    """*********
    SERVICE
    *********

    """

    @staticmethod
    def NewGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.base.BaseWriters/NewGroup',
            base__pb2.NewGroupRequest.SerializeToString,
            base__pb2.NewGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewProtoWriter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.base.BaseWriters/NewProtoWriter',
            base__pb2.NewProtoWriterRequest.SerializeToString,
            base__pb2.NewProtoWriterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteProto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.base.BaseWriters/WriteProto',
            base__pb2.WriteProtoRequest.SerializeToString,
            base__pb2.WriteProtoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewRawWriter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.base.BaseWriters/NewRawWriter',
            base__pb2.NewRawWriterRequest.SerializeToString,
            base__pb2.NewRawWriterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteRaw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/multiscope.base.BaseWriters/WriteRaw',
            base__pb2.WriteRawRequest.SerializeToString,
            base__pb2.WriteRawResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
