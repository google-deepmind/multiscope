// Copyright 2023 DeepMind Technologies Limited
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Protocol buffer to stream text data.
syntax = "proto3";

package multiscope.events;

option go_package = "multiscope/protos/events_go_proto";

// Event sent from Javascript.
message Widget {
  int64 widget_id = 1;

  enum Type {
    UNDEFINED = 0;
    CLICK = 1;
  }

  Type type = 2;
}

message Keyboard {
  // Key code identifying the key.
  int32 key = 1;

  // Type of the event.
  enum Type {
    UNDEFINED = 0;
    UP = 1;
    DOWN = 2;
  }
  Type type = 2;

  // Whether an Alt key was down when this event occurred.
  bool alt = 3;

  // Whether a Ctrl key was down when this event occurred.
  bool ctrl = 4;

  // Whether a Shift key was down when this event occurred.
  bool shift = 5;

  // Whether a Meta key was down when this event occurred.
  bool meta = 6;
}

message Mouse {
  // Index of the mouse key that was pressed (0 - left, 1 - middle, 2 - right).
  int32 key = 1;

  // Mouse horizontal position, in screen space coordinates.
  int32 position_x = 2;

  // Mouse vertical position, in screen space coordinates.
  int32 position_y = 3;

  // Change of mouse's horizontal position since the last MouseMoveEvent
  // message.
  int32 translation_x = 4;

  // Change of mouse's vertical position since the last MouseMoveEvent message.
  int32 translation_y = 5;

  // Type of event.
  enum Type {
    UNDEFINED = 0;
    UP = 1;
    DOWN = 2;
    ENTER = 3;
    LEAVE = 4;
    MOVE = 5;
  }
  Type type = 6;
}
