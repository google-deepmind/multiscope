// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Protocol buffer to stream text data.
syntax = "proto3";

package multiscope.scalar;

import "tree.proto";

option go_package = "multiscope/protos/scalar_go_proto";

message Writer {
  multiscope.TreeID treeID = 1;
  // Path in the Multiscope tree.
  multiscope.NodePath path = 2;
}

// RPC API

// Request to create a new writer in the tree.
message NewWriterRequest {
  multiscope.TreeID treeID = 1;
  multiscope.NodePath path = 2;
}

// Response after creating a new writer in the tree.
message NewWriterResponse {
  Writer writer = 1;
}

// Request to write a scalars data.
message WriteRequest {
  Writer writer = 1;
  map<string, double> label_to_value = 2;
}

message WriteResponse {}

service Scalars {
  // Create a new scalars writer node in Multiscope.
  rpc NewWriter(NewWriterRequest) returns (NewWriterResponse) {}

  // Write scalars to Multiscope.
  rpc Write(WriteRequest) returns (WriteResponse) {}
}
