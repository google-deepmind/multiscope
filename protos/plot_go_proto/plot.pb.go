// Protocol buffer to stream text data.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: plot.proto

package plot_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScalarsPlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plot *Plot `protobuf:"bytes,1,opt,name=plot,proto3" json:"plot,omitempty"`
}

func (x *ScalarsPlot) Reset() {
	*x = ScalarsPlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarsPlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarsPlot) ProtoMessage() {}

func (x *ScalarsPlot) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarsPlot.ProtoReflect.Descriptor instead.
func (*ScalarsPlot) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{0}
}

func (x *ScalarsPlot) GetPlot() *Plot {
	if x != nil {
		return x.Plot
	}
	return nil
}

type Plot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plotters []*Plotter `protobuf:"bytes,2,rep,name=plotters,proto3" json:"plotters,omitempty"`
	X        *Axis      `protobuf:"bytes,3,opt,name=x,proto3" json:"x,omitempty"`
	Y        *Axis      `protobuf:"bytes,4,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Plot) Reset() {
	*x = Plot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plot) ProtoMessage() {}

func (x *Plot) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plot.ProtoReflect.Descriptor instead.
func (*Plot) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{1}
}

func (x *Plot) GetPlotters() []*Plotter {
	if x != nil {
		return x.Plotters
	}
	return nil
}

func (x *Plot) GetX() *Axis {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *Plot) GetY() *Axis {
	if x != nil {
		return x.Y
	}
	return nil
}

type Plotter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serie  *Serie `protobuf:"bytes,1,opt,name=serie,proto3" json:"serie,omitempty"`
	Legend string `protobuf:"bytes,2,opt,name=legend,proto3" json:"legend,omitempty"`
	// Types that are assignable to Drawer:
	//	*Plotter_LineDrawer
	//	*Plotter_BarDrawer
	Drawer isPlotter_Drawer `protobuf_oneof:"drawer"`
}

func (x *Plotter) Reset() {
	*x = Plotter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plotter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plotter) ProtoMessage() {}

func (x *Plotter) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plotter.ProtoReflect.Descriptor instead.
func (*Plotter) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{2}
}

func (x *Plotter) GetSerie() *Serie {
	if x != nil {
		return x.Serie
	}
	return nil
}

func (x *Plotter) GetLegend() string {
	if x != nil {
		return x.Legend
	}
	return ""
}

func (m *Plotter) GetDrawer() isPlotter_Drawer {
	if m != nil {
		return m.Drawer
	}
	return nil
}

func (x *Plotter) GetLineDrawer() *LineDrawer {
	if x, ok := x.GetDrawer().(*Plotter_LineDrawer); ok {
		return x.LineDrawer
	}
	return nil
}

func (x *Plotter) GetBarDrawer() *BarDrawer {
	if x, ok := x.GetDrawer().(*Plotter_BarDrawer); ok {
		return x.BarDrawer
	}
	return nil
}

type isPlotter_Drawer interface {
	isPlotter_Drawer()
}

type Plotter_LineDrawer struct {
	LineDrawer *LineDrawer `protobuf:"bytes,10,opt,name=lineDrawer,proto3,oneof"`
}

type Plotter_BarDrawer struct {
	BarDrawer *BarDrawer `protobuf:"bytes,11,opt,name=barDrawer,proto3,oneof"`
}

func (*Plotter_LineDrawer) isPlotter_Drawer() {}

func (*Plotter_BarDrawer) isPlotter_Drawer() {}

type Serie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*Point `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *Serie) Reset() {
	*x = Serie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Serie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Serie) ProtoMessage() {}

func (x *Serie) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Serie.ProtoReflect.Descriptor instead.
func (*Serie) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{3}
}

func (x *Serie) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{4}
}

func (x *Point) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Axis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties *AxisProperties `protobuf:"bytes,10,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Axis) Reset() {
	*x = Axis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Axis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Axis) ProtoMessage() {}

func (x *Axis) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Axis.ProtoReflect.Descriptor instead.
func (*Axis) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{5}
}

func (x *Axis) GetProperties() *AxisProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type AxisProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	MinValue float64 `protobuf:"fixed64,2,opt,name=minValue,proto3" json:"minValue,omitempty"`
	MaxValue float64 `protobuf:"fixed64,3,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
}

func (x *AxisProperties) Reset() {
	*x = AxisProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AxisProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AxisProperties) ProtoMessage() {}

func (x *AxisProperties) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AxisProperties.ProtoReflect.Descriptor instead.
func (*AxisProperties) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{6}
}

func (x *AxisProperties) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AxisProperties) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *AxisProperties) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

type LineDrawer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LineDrawer) Reset() {
	*x = LineDrawer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineDrawer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineDrawer) ProtoMessage() {}

func (x *LineDrawer) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineDrawer.ProtoReflect.Descriptor instead.
func (*LineDrawer) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{7}
}

type BarDrawer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BarDrawer) Reset() {
	*x = BarDrawer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarDrawer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarDrawer) ProtoMessage() {}

func (x *BarDrawer) ProtoReflect() protoreflect.Message {
	mi := &file_plot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarDrawer.ProtoReflect.Descriptor instead.
func (*BarDrawer) Descriptor() ([]byte, []int) {
	return file_plot_proto_rawDescGZIP(), []int{8}
}

var File_plot_proto protoreflect.FileDescriptor

var file_plot_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x22, 0x38, 0x0a,
	0x0b, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x50, 0x6c, 0x6f, 0x74, 0x12, 0x29, 0x0a, 0x04,
	0x70, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x50, 0x6c, 0x6f,
	0x74, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x04, 0x50, 0x6c, 0x6f, 0x74,
	0x12, 0x34, 0x0a, 0x08, 0x70, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e,
	0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x50, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x52, 0x08, 0x70, 0x6c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70,
	0x6c, 0x6f, 0x74, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x52, 0x01, 0x78, 0x12, 0x23, 0x0a, 0x01, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x52, 0x01, 0x79,
	0x22, 0xd4, 0x01, 0x0a, 0x07, 0x50, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x52, 0x05, 0x73, 0x65, 0x72, 0x69, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x67, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x67, 0x65,
	0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x72, 0x61,
	0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x72, 0x61, 0x77, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x09, 0x62, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x42, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x09, 0x62, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x42, 0x08, 0x0a,
	0x06, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x05, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x6c,
	0x6f, 0x74, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x47, 0x0a, 0x04, 0x41, 0x78, 0x69, 0x73, 0x12, 0x3f, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x70,
	0x6c, 0x6f, 0x74, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x5e,
	0x0a, 0x0e, 0x41, 0x78, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x0c,
	0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x22, 0x0b, 0x0a, 0x09,
	0x42, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x42, 0x21, 0x5a, 0x1f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70,
	0x6c, 0x6f, 0x74, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plot_proto_rawDescOnce sync.Once
	file_plot_proto_rawDescData = file_plot_proto_rawDesc
)

func file_plot_proto_rawDescGZIP() []byte {
	file_plot_proto_rawDescOnce.Do(func() {
		file_plot_proto_rawDescData = protoimpl.X.CompressGZIP(file_plot_proto_rawDescData)
	})
	return file_plot_proto_rawDescData
}

var file_plot_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_plot_proto_goTypes = []interface{}{
	(*ScalarsPlot)(nil),    // 0: multiscope.plot.ScalarsPlot
	(*Plot)(nil),           // 1: multiscope.plot.Plot
	(*Plotter)(nil),        // 2: multiscope.plot.Plotter
	(*Serie)(nil),          // 3: multiscope.plot.Serie
	(*Point)(nil),          // 4: multiscope.plot.Point
	(*Axis)(nil),           // 5: multiscope.plot.Axis
	(*AxisProperties)(nil), // 6: multiscope.plot.AxisProperties
	(*LineDrawer)(nil),     // 7: multiscope.plot.LineDrawer
	(*BarDrawer)(nil),      // 8: multiscope.plot.BarDrawer
}
var file_plot_proto_depIdxs = []int32{
	1, // 0: multiscope.plot.ScalarsPlot.plot:type_name -> multiscope.plot.Plot
	2, // 1: multiscope.plot.Plot.plotters:type_name -> multiscope.plot.Plotter
	5, // 2: multiscope.plot.Plot.x:type_name -> multiscope.plot.Axis
	5, // 3: multiscope.plot.Plot.y:type_name -> multiscope.plot.Axis
	3, // 4: multiscope.plot.Plotter.serie:type_name -> multiscope.plot.Serie
	7, // 5: multiscope.plot.Plotter.lineDrawer:type_name -> multiscope.plot.LineDrawer
	8, // 6: multiscope.plot.Plotter.barDrawer:type_name -> multiscope.plot.BarDrawer
	4, // 7: multiscope.plot.Serie.points:type_name -> multiscope.plot.Point
	6, // 8: multiscope.plot.Axis.properties:type_name -> multiscope.plot.AxisProperties
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_plot_proto_init() }
func file_plot_proto_init() {
	if File_plot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarsPlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plotter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Serie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Axis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AxisProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineDrawer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarDrawer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plot_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Plotter_LineDrawer)(nil),
		(*Plotter_BarDrawer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plot_proto_goTypes,
		DependencyIndexes: file_plot_proto_depIdxs,
		MessageInfos:      file_plot_proto_msgTypes,
	}.Build()
	File_plot_proto = out.File
	file_plot_proto_rawDesc = nil
	file_plot_proto_goTypes = nil
	file_plot_proto_depIdxs = nil
}
