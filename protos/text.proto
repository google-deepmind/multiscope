// Protocol buffer to stream text data.
syntax = "proto3";

package multiscope.text;

import "tree.proto";

option go_package = "multiscope/protos/text_go_proto";

message Writer {
  // Path in the Multiscope tree.
  multiscope.NodePath path = 1;
}

message HTMLWriter {
  // Path in the Multiscope tree.
  multiscope.NodePath path = 1;
}

// RPC API

// Request to create a new (raw) text writer in the tree.
message NewWriterRequest {
  multiscope.NodePath path = 1;
}

// Response after creating a new (raw) text writer in the tree.
message NewWriterResponse {
  Writer writer = 1;
}

// Request to create a new HTML writer in the tree.
message NewHTMLWriterRequest {
  multiscope.NodePath path = 1;
}

// Response after creating a new HTML writer in the tree.
message NewHTMLWriterResponse {
  HTMLWriter writer = 1;
}

// Request to write text to a Writer.
message WriteRequest {
  Writer writer = 1;
  string text = 2;
}

message WriteResponse {}

// Request to write HTML to a HTML writer.
message WriteHTMLRequest {
  HTMLWriter writer = 1;
  string html = 2;
}

message WriteHTMLResponse {}

// Request to write CSS to a HTML writer.
message WriteCSSRequest {
  HTMLWriter writer = 1;
  string css = 2;
}

message WriteCSSResponse {}

service Text {
  // Create a new raw writer node in Multiscope.
  rpc NewWriter(NewWriterRequest) returns (NewWriterResponse) {}

  // Create a new HTML writer node in Multiscope.
  rpc NewHTMLWriter(NewHTMLWriterRequest) returns (NewHTMLWriterResponse) {}

  // Write raw text to Multiscope.
  rpc Write(WriteRequest) returns (WriteResponse) {}

  // Write HTML text to Multiscope.
  rpc WriteHTML(WriteHTMLRequest) returns (WriteHTMLResponse) {}

  // Write CSS text to Multiscope.
  rpc WriteCSS(WriteCSSRequest) returns (WriteCSSResponse) {}
}
